"""Revising Schema

Revision ID: 6ffcd84f2b9a
Revises: 8a375f533530
Create Date: 2023-09-30 05:04:19.877891

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6ffcd84f2b9a'
down_revision = '8a375f533530'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('message', sa.String(length=256), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('sent_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('channel', sa.String(length=20), nullable=True),
    sa.Column('notification_type', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('permissions', sa.String(length=200), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('rounds',
    sa.Column('game_night_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['game_night_id'], ['game_nights.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('rsvp_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('game_night_id', sa.UUID(), nullable=False),
    sa.Column('response_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('response_status', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['game_night_id'], ['game_nights.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('attendance')
    op.drop_table('game_night_games')
    with op.batch_alter_table('announcements', schema=None) as batch_op:
        batch_op.drop_constraint('announcements_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_column('game_type')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_id', sa.UUID(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.create_foreign_key(None, 'user_roles', ['role_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('is_active')
        batch_op.drop_column('role_id')

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.add_column(sa.Column('game_type', sa.VARCHAR(length=64), autoincrement=False, nullable=True))

    with op.batch_alter_table('announcements', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('announcements_user_id_fkey', 'users', ['user_id'], ['id'])

    op.create_table('game_night_games',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('game_night_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('game_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='game_night_games_game_id_fkey'),
    sa.ForeignKeyConstraint(['game_night_id'], ['game_nights.id'], name='game_night_games_game_night_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_night_games_pkey'),
    sa.UniqueConstraint('id', name='game_night_games_id_key')
    )
    op.create_table('attendance',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('game_night_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_night_id'], ['game_nights.id'], name='attendance_game_night_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='attendance_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attendance_pkey'),
    sa.UniqueConstraint('id', name='attendance_id_key')
    )
    op.drop_table('rsvp_logs')
    op.drop_table('rounds')
    op.drop_table('user_roles')
    op.drop_table('notifications')
    # ### end Alembic commands ###
